#+title: Todo New

- [X] Disabling to press enable2FA multiple times
- [X] disable enable2FA if the user has it already enabled
- [X] twofa_enabled should have a default value of "false"
- [X] add 2faEnabled attribute on user
- [X] what happens if the process is aborted?
  - 2fa secret gets created but it is not used since it is still disabled
  - clicking enable 2fa again after the user navigated somewhere else will just create another secret
- [X] do authorization in updateUser/updateProfile
  - find a way that only the actual user can change its data
- [X] actually implement 2fa verification (in login / disable and register)
- [X] implement disable-2fa verification
- [X] make better updateProfile (everything)

- [X] implement "api/auth/verify" (something like that)
  - [X] this is for the tournament
  - [X] also will use 2fa

- [X] change prefix for updateProfile
- [X] bug: once 2fa is verified with wrong code, it is not working anymore (at least in tournament)
  - in login view it seems to work
- [X] have craetedAt timestamp at match
- [X] proper return schema for postMatch
- [X] make email and username changeable in profile

- [ ] new table
  - [ ] create migration with new table
    #+begin_src sqlite
  CREATE TABLE tournament_matches (
      tournament_id TEXT NOT NULL,
      match_id TEXT NOT NULL,
      FOREIGN KEY (tournament_id) REFERENCES tournaments(id),
      FOREIGN KEY (match_id) REFERENCES matches(id),
  );
    #+end_src
  - [ ] when a match is saved, and it was part of a tournament (GameMode = "tournament"), it should be added to this table
  - [ ] remove column "status" from tournaments
- [ ] when usual game is played, player2 avatar shall be the default avatar as well

- [ ] add match history view
  - [ ] change PublicUser to something more strict (without twoFaEnabled)
  - [ ] have a real PublicUser (only id, username, avatar)
  - [ ] make the matchHistory link visible in profile
  - [ ] when clicking on a user in matchView or tournamentView or in the matchHistoryView, it should lead to the match history of that user
- [ ] add statistics in profile
- [ ] grey line on tournamentCreationPanel
- [ ] treating the security hole that a logged in user can actually post a tournament with any valid uuids
  - [ ] need to check if the users exist
  - [ ] need to have some token verification
    - maybe soomething like
      #+begin_src typescript
        const token = request.server.jwt.sign({userId: asdf, verified: true}, { expiresIn: "5min" });
      #+end_src
