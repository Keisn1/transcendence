#+title: Todo New

- [X] Disabling to press enable2FA multiple times
- [X] disable enable2FA if the user has it already enabled
- [X] twofa_enabled should have a default value of "false"
- [X] add 2faEnabled attribute on user
- [X] what happens if the process is aborted?
  - 2fa secret gets created but it is not used since it is still disabled
  - clicking enable 2fa again after the user navigated somewhere else will just create another secret
- [X] do authorization in updateUser/updateProfile
  - find a way that only the actual user can change its data
- [X] actually implement 2fa verification (in login / disable and register)
- [X] implement disable-2fa verification
- [X] make better updateProfile (everything)

- [X] implement "api/auth/verify" (something like that)
  - [X] this is for the tournament
  - [X] also will use 2fa

- [X] change prefix for updateProfile
- [X] bug: once 2fa is verified with wrong code, it is not working anymore (at least in tournament)
  - in login view it seems to work
- [X] have craetedAt timestamp at match
- [X] proper return schema for postMatch
- [X] make email and username changeable in profile

- [X] new table
  - [X] create migration with new table
    #+begin_src sqlite
  CREATE TABLE tournament_matches (
      tournament_id TEXT NOT NULL,
      match_id TEXT NOT NULL,
      FOREIGN KEY (tournament_id) REFERENCES tournaments(id),
      FOREIGN KEY (match_id) REFERENCES matches(id),
  );
    #+end_src
  - [X] when a match is saved, and it was part of a tournament (GameMode = "tournament"), it should be added to this table
  - [X] remove column "status" from tournaments
- [X] when usual game is played, player2 avatar shall be the default avatar as well
  - solution with default-pfp -> look into notes

- [X] bug: in TournamentCreationPanel: clicking on register multiple times will open verification multiple times
- [X] add statistics in profile
- [X] grey line on tournamentCreationPanel

- [-] add match history view
  - [X] change PublicUser to something more strict (without twoFaEnabled)
  - [X] have a real PublicUser (only id, username, avatar)

  - [ ] make the matchHistory link visible in profile
  - [ ] when clicking on a user in matchView or tournamentView or in the matchHistoryView, it should lead to the match history of that user

- [ ] disable sign-in button when 2fa is reached
- [ ] do user not by id but by username

- [ ] have tournamentsystem without registration

- [ ] treating the security hole that a logged in user can actually post a tournament with any valid uuids
  - [ ] need to check if the users exist
  - [ ] need to have some token verification
    - maybe soomething like
      #+begin_src typescript
        const token = request.server.jwt.sign({userId: asdf, verified: true}, { expiresIn: "5min" });
      #+end_src
* notes eriki_tournament_matches
- instead of giving tournamendId as string in constructor of the GameComponent, use the GameComponentOptions
- delete getTournamentId (we already have getTournament)
- tournamentId? inside the type
- outfactor default-pfp.png (it is present in some places of the code, we should factor this out to somewhere, where it can be defined application wide)

* notes on new user type
- auth routes that need to send back twoFaEnabled or not (those where the frontend will set the current user)
  - /signup (always false)
  - /login
  - /2fa/complete
  - POST /api/user - updateUser
    - because it updates the user in the frontend, so it needs it

- the ones that send back a PublicUser object but don't need the twoFaEnabled in the frontend
  - GET /profile
    - but here we have a Profile type, and i just deleted twoFaEnabled on it
  - POST /auth/verify
    - in frontend/auth/auth.service ts verifyUser returns a PublicUser object which is not necessary, should only return id/username/avatar
    - actually verify can stay like this, but the user object returned by authService.verifyUser should be a real PublicUser
