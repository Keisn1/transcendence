:PROPERTIES:
:GPTEL_MODEL: claude-sonnet-4-20250514
:GPTEL_BACKEND: Claude
:GPTEL_SYSTEM: You are a large language model living in Emacs and a helpful assistant. Avoid long answers.
:GPTEL_BOUNDS: ((response (383 1183) (1237 2332) (2413 3596)))
:END:

*** I'm using doom emacs with lsp mode. I'm editing html files. I want to use lsp-tailwindcss as well in html. How do i do that?

To use =lsp-tailwindcss= with HTML files in Doom Emacs:

1. *Install the language server*:
   #+begin_src bash
   npm install -g @tailwindcss/language-server
   #+end_src

2. *Add to your Doom config* (=~/.doom.d/config.el=):
   #+begin_src elisp
   (use-package! lsp-tailwindcss
     :init
     (setq lsp-tailwindcss-add-on-mode t)
     :config
     (add-to-list 'lsp-tailwindcss-major-modes 'html-mode))
   #+end_src

3. *Enable in HTML mode hook*:
   #+begin_src elisp
   (add-hook 'html-mode-hook #'lsp!)
   #+end_src

4. *Make sure you have a =tailwind.config.js=* in your project root for the language server to detect Tailwind usage.

5. *Restart Emacs* or reload your config with =SPC h r r=.

The language server should now provide Tailwind CSS completions and hover info in your HTML files.

*** it doesn't seem to propose any autocompletions

Here are some troubleshooting steps:

1. *Check if LSP is running*:
   - In your HTML file, run =M-x lsp-describe-session=
   - You should see =tailwindcss-language-server= listed

2. *Verify Tailwind detection*:
   - Make sure you have a =tailwind.config.js= in your project root
   - Or at least some Tailwind classes in your HTML/CSS files
   - The language server needs to detect Tailwind usage

3. *Check LSP configuration*:
   #+begin_src elisp
   ;; Add this to your config.el
   (after! lsp-mode
     (add-to-list 'lsp-language-id-configuration '(html-mode . "html"))
     (lsp-register-client
      (make-lsp-client :new-connection (lsp-stdio-connection '("tailwindcss-language-server" "--stdio"))
                       :major-modes '(mhtml-mode)
                       :server-id 'tailwindcss)))
   #+end_src

4. *Manual LSP start*:
   - In your HTML file, try =M-x lsp= explicitly
   - Check =*lsp-log*= buffer for errors

5. *Company completion*:
   - Make sure =company-mode= is enabled
   - Try =M-x company-complete= manually

What do you see when you run =lsp-describe-session=?

*** but now i don't see the autocompletions from html-language server anymore

You likely overwrote the HTML language server. Here's how to have both:

#+begin_src elisp
(after! lsp-mode
  ;; Register Tailwind CSS language server
  (lsp-register-client
   (make-lsp-client :new-connection (lsp-stdio-connection '("tailwindcss-language-server" "--stdio"))
                    :activation-fn (lsp-activate-on "html")
                    :major-modes '(html-mode mhtml-mode)
                    :server-id 'tailwindcss-ls))

  ;; Enable multiple language servers for HTML
  (setq lsp-tailwindcss-add-on-mode t))

;; Hook to start both servers
(add-hook 'html-mode-hook
  (lambda ()
    (lsp!)
    ;; Force start tailwindcss if it doesn't auto-start
    (when (and (bound-and-true-p lsp-mode)
               (locate-dominating-file default-directory "tailwind.config.js"))
      (lsp-workspace-folders-add (project-root (project-current))))))
#+end_src

Or try this simpler approach:

#+begin_src elisp
(use-package! lsp-tailwindcss
  :init
  (setq lsp-tailwindcss-add-on-mode t))

(add-hook 'html-mode-hook #'lsp!)
#+end_src

The key is setting =lsp-tailwindcss-add-on-mode= to =t= so it runs alongside the existing HTML language server rather than replacing it.

***
